Imports System.IO

Public Class Form1
    ' Define the file path
    Private filePath As String = "C:\YourChosenPath\userBookings.txt"

    ' Load Form1 and create the file if it doesn't exist
    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        If Not File.Exists(filePath) Then
            ' Create the file if it doesn't exist
            File.Create(filePath).Dispose()
        End If
    End Sub

    ' Directs to the Login form
    Private Sub btnLogin_Click(sender As Object, e As EventArgs) Handles btnLogin.Click
        Dim loginForm As New LoginForm()
        loginForm.filePath = filePath ' Pass the file path to the login form
        loginForm.Show()
        Me.Hide()
    End Sub

    ' Directs to the Sign-Up form
    Private Sub btnSignUp_Click(sender As Object, e As EventArgs) Handles btnSignUp.Click
        Dim signUpForm As New SignUpForm()
        signUpForm.filePath = filePath ' Pass the file path to the sign-up form
        signUpForm.Show()
        Me.Hide()
    End Sub

    ' Handle closing the application and deleting the file
    Private Sub Form1_FormClosing(sender As Object, e As FormClosingEventArgs) Handles MyBase.FormClosing
        ' Delete the file when the application closes
        If File.Exists(filePath) Then
            File.Delete(filePath)
        End If
    End Sub
End Class
Imports System.IO

Public Class SignUpForm
    Public filePath As String

    ' Handles sign-up process
    Private Sub btnSignUp_Click(sender As Object, e As EventArgs) Handles btnSignUp.Click
        ' Get user details from input fields
        Dim name As String = txtName.Text
        Dim email As String = txtEmail.Text
        Dim address As String = txtAddress.Text
        Dim dob As String = txtDOB.Text

        ' Prepare the user data string
        Dim userData As String = $"{name},{email},{address},{dob},," ' Booking date and time will be added later

        ' Write the user data to the file
        Using writer As New StreamWriter(filePath, True)
            writer.WriteLine(userData)
        End Using

        MessageBox.Show("Sign-up successful!")
        Me.Hide()
        Form1.Show()
    End Sub
End Class
Imports System.IO

Public Class LoginForm
    Public filePath As String

    ' Handles login process
    Private Sub btnLogin_Click(sender As Object, e As EventArgs) Handles btnLogin.Click
        Dim email As String = txtEmail.Text
        Dim userFound As Boolean = False

        ' Read the file and search for the user by email
        Using reader As New StreamReader(filePath)
            While Not reader.EndOfStream
                Dim line As String = reader.ReadLine()
                Dim userDetails As String() = line.Split(",")

                If userDetails(1) = email Then ' Check if the email matches
                    MessageBox.Show($"Welcome {userDetails(0)}! Your booking is on {userDetails(4)} at {userDetails(5)}.")
                    userFound = True

                    ' Open the BookingForm and pass the user details
                    Dim bookingForm As New BookingForm(userDetails)
                    bookingForm.filePath = filePath
                    bookingForm.Show()
                    Me.Hide()
                    Exit While
                End If
            End While
        End Using

        If Not userFound Then
            MessageBox.Show("No existing login found for this email.")
        End If
    End Sub
End Class
Imports System.IO

Public Class BookingForm
    Public filePath As String
    Private userDetails As String()

    ' Constructor that accepts the logged-in user details
    Public Sub New(details As String())
        InitializeComponent()
        userDetails = details

        ' Display current booking information
        lblBookingDate.Text = "Booking Date: " & userDetails(4)
        lblBookingTime.Text = "Booking Time: " & userDetails(5)
    End Sub

    ' Handles booking edit
    Private Sub btnEditBooking_Click(sender As Object, e As EventArgs) Handles btnEditBooking.Click
        ' Get new booking details
        Dim newBookingDate As String = datePicker.Value.ToString("yyyy-MM-dd")
        Dim newBookingTime As String = cmbTimeSlot.SelectedItem.ToString()

        ' Update the user details array
        userDetails(4) = newBookingDate
        userDetails(5) = newBookingTime

        ' Update the file with the new booking details
        UpdateFile()

        MessageBox.Show("Booking updated!")
    End Sub

    ' Handles booking cancellation
    Private Sub btnCancelBooking_Click(sender As Object, e As EventArgs) Handles btnCancelBooking.Click
        ' Clear booking details
        userDetails(4) = ""
        userDetails(5) = ""

        ' Update the file
        UpdateFile()

        MessageBox.Show("Booking canceled!")
    End Sub

    ' Updates the file with the current user details
    Private Sub UpdateFile()
        ' Read all lines from the file
        Dim allLines As List(Of String) = File.ReadAllLines(filePath).ToList()

        ' Find and update the user's line
        For i As Integer = 0 To allLines.Count - 1
            Dim line As String = allLines(i)
            Dim details As String() = line.Split(",")

            If details(1) = userDetails(1) Then ' Match by email
                ' Update the line with new details
                allLines(i) = String.Join(",", userDetails)
                Exit For
            End If
        Next

        ' Write the updated lines back to the file
        File.WriteAllLines(filePath, allLines)
    End Sub
End Class
Private Sub Form1_FormClosing(sender As Object, e As FormClosingEventArgs) Handles MyBase.FormClosing
    ' Delete the file when the application closes
    If File.Exists(filePath) Then
        File.Delete(filePath)
    End If
End Sub
